// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_erp.EntityConfig;

#nullable disable

namespace api_erp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030000205_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("api_erp.Model.Armario", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UltimaVerificacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("armario");
                });

            modelBuilder.Entity("api_erp.Model.Categoria", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoCategoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("api_erp.Model.Empresa", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Documento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsavel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoEmpresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("api_erp.Model.Endereco", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("api_erp.Model.Estoque", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArmarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UltimaMovimentacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArmarioId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("estoque");
                });

            modelBuilder.Entity("api_erp.Model.MovimentacaoEstoque", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArmarioId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataMovimentacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("movimentacao_estoque");
                });

            modelBuilder.Entity("api_erp.Model.PecaQrCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataGeracao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovimentacaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("MovimentacaoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("peca_qrcode");
                });

            modelBuilder.Entity("api_erp.Model.Perfil", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("api_erp.Model.Produto", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdIntegracao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("IdIntegracao")
                        .IsUnique();

                    b.HasIndex("Sku")
                        .IsUnique();

                    b.ToTable("produto");
                });

            modelBuilder.Entity("api_erp.Model.Usuario", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PerfilId");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.ConfirmacaoCliente", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Carimbo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrdemServicoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrdemServicoId");

                    b.ToTable("ConfirmacoesCliente");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Custo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AjudanteName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrdemServicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ValorTotal")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("dataVisita")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrdemServicoId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("Custos");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.DescricaoDefeito", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefeitosList")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Pendencia")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DescricoesDefeito");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.DescricaoDoChamado", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrdemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdemServicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("OrdemServicoId");

                    b.ToTable("DescricoesDoChamado");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Deslocamento", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("HrChegadaCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HrChegadaEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HrSaidaCliente")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HrSaidaEmpresa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdOrdemServico")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdemServicoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TotalHoras")
                        .HasColumnType("TEXT");

                    b.Property<double?>("TotalReais")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CustoId");

                    b.HasIndex("OrdemServicoId");

                    b.ToTable("Deslocamentos");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.HoraTrabalhada", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdOrdemServico")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrdemServicoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalValor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CustoId");

                    b.HasIndex("OrdemServicoId");

                    b.ToTable("HorasTrabalhadas");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.KM", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("QntKm")
                        .HasColumnType("REAL");

                    b.Property<double>("ValorPorKm")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CustoId");

                    b.ToTable("Kms");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Material", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantidade")
                        .HasColumnType("REAL");

                    b.Property<double>("TotalValor")
                        .HasColumnType("REAL");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CustoId");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataFaturamento")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GarantiaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroOS")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pedido")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("OrdensServico");
                });

            modelBuilder.Entity("api_erp.Model.Armario", b =>
                {
                    b.HasOne("api_erp.Model.Empresa", "Empresa")
                        .WithMany("Armarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("api_erp.Model.Empresa", b =>
                {
                    b.HasOne("api_erp.Model.Endereco", "Endereco")
                        .WithMany("Empresas")
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("api_erp.Model.Estoque", b =>
                {
                    b.HasOne("api_erp.Model.Armario", "Armario")
                        .WithMany("Estoques")
                        .HasForeignKey("ArmarioId");

                    b.HasOne("api_erp.Model.Produto", "Produto")
                        .WithMany("Estoques")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Armario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("api_erp.Model.MovimentacaoEstoque", b =>
                {
                    b.HasOne("api_erp.Model.Produto", "Produto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_erp.Model.Usuario", "Usuario")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_erp.Model.PecaQrCode", b =>
                {
                    b.HasOne("api_erp.Model.MovimentacaoEstoque", "Movimentacao")
                        .WithMany()
                        .HasForeignKey("MovimentacaoId");

                    b.HasOne("api_erp.Model.Produto", "Produto")
                        .WithMany("PecasQrCode")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_erp.Model.Usuario", "Usuario")
                        .WithMany("PecasQrCode")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movimentacao");

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api_erp.Model.Produto", b =>
                {
                    b.HasOne("api_erp.Model.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("api_erp.Model.Usuario", b =>
                {
                    b.HasOne("api_erp.Model.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("api_erp.Model.Endereco", "Endereco")
                        .WithMany("Usuarios")
                        .HasForeignKey("EnderecoId");

                    b.HasOne("api_erp.Model.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId");

                    b.Navigation("Empresa");

                    b.Navigation("Endereco");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.ConfirmacaoCliente", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoId");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Custo", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoId");

                    b.HasOne("api_erp.Model.Usuario", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");

                    b.Navigation("OrdemServico");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.DescricaoDoChamado", b =>
                {
                    b.HasOne("api_erp.Model.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("api_erp.Models.OSModels.OrdemServico", "OrdemServico")
                        .WithMany("DescricaoDoChamadoList")
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Deslocamento", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.Custo", null)
                        .WithMany("Deslocamento_List")
                        .HasForeignKey("CustoId");

                    b.HasOne("api_erp.Models.OSModels.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.HoraTrabalhada", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.Custo", null)
                        .WithMany("HoraTrabalhada_List")
                        .HasForeignKey("CustoId");

                    b.HasOne("api_erp.Models.OSModels.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.KM", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.Custo", null)
                        .WithMany("KM_List")
                        .HasForeignKey("CustoId");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Material", b =>
                {
                    b.HasOne("api_erp.Models.OSModels.Custo", "Custo")
                        .WithMany("Material_List")
                        .HasForeignKey("CustoId");

                    b.Navigation("Custo");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.OrdemServico", b =>
                {
                    b.HasOne("api_erp.Model.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_erp.Model.Usuario", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");

                    b.Navigation("Empresa");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("api_erp.Model.Armario", b =>
                {
                    b.Navigation("Estoques");
                });

            modelBuilder.Entity("api_erp.Model.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("api_erp.Model.Empresa", b =>
                {
                    b.Navigation("Armarios");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api_erp.Model.Endereco", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api_erp.Model.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("api_erp.Model.Produto", b =>
                {
                    b.Navigation("Estoques");

                    b.Navigation("Movimentacoes");

                    b.Navigation("PecasQrCode");
                });

            modelBuilder.Entity("api_erp.Model.Usuario", b =>
                {
                    b.Navigation("Movimentacoes");

                    b.Navigation("PecasQrCode");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.Custo", b =>
                {
                    b.Navigation("Deslocamento_List");

                    b.Navigation("HoraTrabalhada_List");

                    b.Navigation("KM_List");

                    b.Navigation("Material_List");
                });

            modelBuilder.Entity("api_erp.Models.OSModels.OrdemServico", b =>
                {
                    b.Navigation("DescricaoDoChamadoList");
                });
#pragma warning restore 612, 618
        }
    }
}
